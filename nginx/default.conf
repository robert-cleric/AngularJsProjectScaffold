# Use this configuration for https
# If you use this config change the 
# docker-compose 
# Ports: 
#     - 80:80
#     - 443:443
server {
    # Redirect all requests on port 80 to https
    listen         80;
    server_name    localhost;
    return         301 https://$server_name$request_uri;
    #return         301 https://$host$request_uri;
}
server {
    #listen 443 ssl;
    #server_name localhost;
    listen 443 default_server;
    ssl on;
    ssl_certificate /etc/nginx/ssl/webapp-nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/webapp-nginx.key;
    
    # protocols
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # disable poodle    
    
    # ciphers
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    #ssl_session_cache   shared:SSL:10m;
    #ssl_session_timeout 10m;

    server_name default_server;

    keepalive_timeout 70;

    location / {
        root   /usr/share/nginx/html/;
        index  index.html index.htm;
        add_header Cache-Control no-cache;

        try_files $uri $uri/ /index.html;
        #try_files $uri $uri/ /webapp;
    }

    location ~* \.htaccess {
        deny all;
        log_not_found off;
        access_log off;
    }

   location /api {
       proxy_pass http://webapi;
   }
}
    

# # Use this configuration if not using https
# # If you use this config change the 
# # docker-compose 
# # Ports: 
# #     - "80:443"
# server {
#     listen 443;
#     #server_name localhost;

#     location / {
#         root   /usr/share/nginx/html/;
#         index  index.html index.htm;
#         add_header Cache-Control no-cache;

#     }

#    location /api {
#        proxy_pass http://webapi;
#    }
# }